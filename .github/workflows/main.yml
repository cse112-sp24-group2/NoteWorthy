name: CI
on: push
jobs:
  build:
    # Installs Yarn (npm alternative) to run jest tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Installs
        run: |
          npm install jest
          npm install --save-dev node-fetch
          npm install -D jest-environment-jsdom
          npm ci -l verbose
      - name: Check linting and formatting
        run: npm run lint:check
      - name: HTML5 Validator
        uses: Cyb3r-Jak3/html5validator-action@v7.2.0
        with:
          root: source/
          css: true
          skip_git_check: true
      - name: Start server
        run: |
          npm start &
        env:
          CI: true
      - name: Run TESTS
        run: |
          npm run test
        env:
          NODE_OPTIONS: --experimental-vm-modules
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          CI: true
      - name: Google Lighthouse
        run: |
          npm install -g @lhci/cli@0.13.x
          lhci autorun --assertions
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      # Autogenerate jsDocs and output files to ./jsdocs
      - name: Generate jsDocs
        uses: andstor/jsdoc-action@v1.2.1
        with:
          source_dir: ./source/scripts
          recurse: true
          output_dir: ./jsdocs
          front_page: README.md
      - name: Minify JS
        run: |
          npm install uglify-js -g
          find ./source/scripts -name "*.js" -exec uglifyjs {} -o {} --compress --mangle --module \;

      # Push generated files onto a external repository to deploy on GitHub pages
      - name: Deploy jsDocs
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
